# Maven
# Build your Java project and run tests with Apache Maven.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

trigger:
- master

pool:
  vmImage: ubuntu-latest
  
variables:

  API_VERSION: "googleapi"
  
  DEFAULT_APIGEE_ENV: "hybrid-example-env"
  DEFAULT_APIGEE_ORG: "clear-coyote-344705"
  
  COMMIT_ID: $(Build.SourceVersion)
  COMMIT_BRANCH: $(Build.SourceBranch)

steps:
# Set Deployment Target: Define Apigee organization and environmnet from Git Branch
- bash: |
    echo $COMMIT_BRANCH is commited
    if [ $COMMIT_BRANCH == "refs/heads/prod" ]; then
      # Prod branch --> Apigee prod environment 
      echo "##vso[task.setvariable variable=APIGEE_ORG]$DEFAULT_APIGEE_ORG"
      echo "##vso[task.setvariable variable=APIGEE_ENV]prod"
    else
      # all ohers branches --> default environment
      echo "##vso[task.setvariable variable=APIGEE_ORG]$DEFAULT_APIGEE_ORG"
      echo "##vso[task.setvariable variable=APIGEE_ENV]$DEFAULT_APIGEE_ENV"
    fi
  enabled: "true"
  displayName: Set Deployment Target
  env:  
    DEFAULT_APIGEE_ORG: $(DEFAULT_APIGEE_ORG)
    DEFAULT_APIGEE_ENV: $(DEFAULT_APIGEE_ENV)
    COMMIT_BRANCH: $(COMMIT_BRANCH)
    
# install node.js tools and dependencies
- task: NodeTool@0
  inputs:
    versionSpec: '12.x'
  enabled: "true"
    
- task: Npm@1
  inputs:
    command: 'install'
    workingDir: '.'
  displayName: npmInstalls
  enabled: "true"


# run Apigeelint, API proxy linter
# generate result output in Junit because Azure task PublishTestResults doesn't (yet) support html
- bash: |
    echo "run Apigeelint" 
    mkdir code_test_output
    ./node_modules/apigeelint/cli.js -s apiproxy/ -e PO013 -f html.js  > code_test_output/apigeelint-output.html
    cat code_test_output/apigeelint-output.html
  enabled: "true"
  displayName: runApigeeLint
  
# Publish static code analysis folder results
- task: PublishBuildArtifacts@1
  displayName: publishStaticCodeTestsResults
  enabled: "true"
  inputs:
    pathToPublish: code_test_output
    artifactName: static-code-analysis


- task: Maven@3
  displayName: mvnApigeeConfiguration
  enabled: "true"
  condition:  eq(variables.API_VERSION, 'googleapi')
  inputs:
    mavenPomFile: 'pom.xml'
    mavenOptions: '-Xmx3072m'
    javaHomeOption: 'JDKVersion'
    jdkVersionOption: '1.8'
    jdkArchitectureOption: 'x64'
    publishJUnitResults: true
    testResultsFiles: '**/surefire-reports/TEST-*.xml'
    goals: "install -P$(API_VERSION) -Dapigee.config.options=update"
    #goals: "install -P$(API_VERSION) -Dapigee.org=$(APIGEE_ORG) -Denv=$(APIGEE_ENV) -Dsa=sa.json -Dapigee.config.file=./EdgeConfig/edge.json -Dapigee.config.options=update"
